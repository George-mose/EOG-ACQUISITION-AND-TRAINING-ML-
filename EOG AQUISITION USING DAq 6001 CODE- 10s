import numpy as np
import matplotlib.pyplot as plt
import nidaqmx
import csv
import pickle
import time 

time.sleep(2)

def acquire_eog(d, sr):
    n = d * sr
    
    with nidaqmx.Task() as t:
        t.ai_channels.add_ai_voltage_chan("Dev1/ai0", max_val=1.0, min_val=-1.0)
        t.timing.cfg_samp_clk_timing(rate=sr, samps_per_chan=n)
        
        eog1 = t.read(number_of_samples_per_channel=n)
    
    return eog1

def plot_and_save_eog(eog1, sr, fn):
    t = np.arange(0, len(eog1) / sr, 1 / sr)
    
    plt.figure(figsize=(10, 6))
    plt.plot(t, eog1)
    plt.xlabel('Time (s)')
    plt.ylabel('EOG (V)')
    plt.title('EOG Data')
    plt.grid(True)
    plt.savefig(fn + '.png')
    plt.show()
    
    with open(fn + '.pickle', 'wb') as f:
        pickle.dump(eog1, f)
    
    with open(fn + '.csv', 'w', newline='') as csvfile:
        w = csv.writer(csvfile)
        w.writerow(['Time (s)', 'EOG (V)'])
        for ti, eo in zip(t, eog1):
            w.writerow([ti, eo])

if __name__ == "__main__":
    d = 10 # Duration of acquisition in seconds
    sr = 1000  # Sampling rate in Hz
    fn = 'EOG30'
    eog1 = acquire_eog(d, sr)
    plot_and_save_eog(eog1, sr, fn)
